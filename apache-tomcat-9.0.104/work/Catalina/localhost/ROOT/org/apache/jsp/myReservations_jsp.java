/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-04-28 21:08:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class myReservations_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

    String firstName = (String) session.getAttribute("firstName");
    if (firstName == null) {
        response.sendRedirect("index.jsp");
    }

    int accountID = 101; // Replace with real session/account lookup if needed

    Connection conn = null;
    PreparedStatement pstmtUpcoming = null;
    PreparedStatement pstmtPast = null;
    ResultSet rsUpcoming = null;
    ResultSet rsPast = null;

    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/airlineproj", "root", "parshva123");

        // Upcoming Reservations
        String sqlUpcoming = "SELECT ft.ticketNum, ft.seat, ft.class, ft.totalFare, f.flightNum, f.departure, f.arrival, f.departureDate, al.name AS airline " +
                             "FROM FlightTicket ft " +
                             "JOIN Flight f ON ft.flightID = f.flightID " +
                             "JOIN Airline al ON f.airlineID = al.airlineID " +
                             "WHERE ft.accountID = ? AND f.departureDate >= CURDATE()";
        pstmtUpcoming = conn.prepareStatement(sqlUpcoming);
        pstmtUpcoming.setInt(1, accountID);
        rsUpcoming = pstmtUpcoming.executeQuery();

        // Past Reservations
        String sqlPast = "SELECT ft.ticketNum, ft.seat, ft.class, ft.totalFare, f.flightNum, f.departure, f.arrival, f.departureDate, al.name AS airline " +
                         "FROM FlightTicket ft " +
                         "JOIN Flight f ON ft.flightID = f.flightID " +
                         "JOIN Airline al ON f.airlineID = al.airlineID " +
                         "WHERE ft.accountID = ? AND f.departureDate < CURDATE()";
        pstmtPast = conn.prepareStatement(sqlPast);
        pstmtPast.setInt(1, accountID);
        rsPast = pstmtPast.executeQuery();

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head><title>My Reservations</title></head>\n");
      out.write("<body>\n");
      out.write("    <h2>Reservations for ");
      out.print( firstName );
      out.write("</h2>\n");
      out.write("\n");
      out.write("    <!-- Upcoming Reservations -->\n");
      out.write("    <h3>Upcoming Reservations</h3>\n");
      out.write("    <table border=\"1\">\n");
      out.write("        <tr>\n");
      out.write("            <th>Flight Number</th>\n");
      out.write("            <th>Airline</th>\n");
      out.write("            <th>Departure</th>\n");
      out.write("            <th>Arrival</th>\n");
      out.write("            <th>Departure Date</th>\n");
      out.write("            <th>Seat</th>\n");
      out.write("            <th>Class</th>\n");
      out.write("            <th>Total Fare</th>\n");
      out.write("            <th>Cancel</th>\n");
      out.write("        </tr>\n");
      out.write("        ");

            while(rsUpcoming.next()) {
        
      out.write("\n");
      out.write("        <tr>\n");
      out.write("            <td>");
      out.print( rsUpcoming.getString("flightNum") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsUpcoming.getString("airline") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsUpcoming.getTime("departure") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsUpcoming.getTime("arrival") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsUpcoming.getDate("departureDate") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsUpcoming.getString("seat") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsUpcoming.getString("class") );
      out.write("</td>\n");
      out.write("            <td>$");
      out.print( rsUpcoming.getFloat("totalFare") );
      out.write("</td>\n");
      out.write("            <td>\n");
      out.write("                ");
 if(rsUpcoming.getString("class").equals("Business") || rsUpcoming.getString("class").equals("First")) { 
      out.write("\n");
      out.write("                    <a href=\"cancelReservation.jsp?ticketNum=");
      out.print( rsUpcoming.getInt("ticketNum") );
      out.write("\">Cancel</a>\n");
      out.write("                ");
 } else { 
      out.write("\n");
      out.write("                    Not Allowed\n");
      out.write("                ");
 } 
      out.write("\n");
      out.write("            </td>\n");
      out.write("        </tr>\n");
      out.write("        ");

            }
        
      out.write("\n");
      out.write("    </table>\n");
      out.write("\n");
      out.write("    <!-- Past Reservations -->\n");
      out.write("    <h3>Past Reservations</h3>\n");
      out.write("    <table border=\"1\">\n");
      out.write("        <tr>\n");
      out.write("            <th>Flight Number</th>\n");
      out.write("            <th>Airline</th>\n");
      out.write("            <th>Departure</th>\n");
      out.write("            <th>Arrival</th>\n");
      out.write("            <th>Departure Date</th>\n");
      out.write("            <th>Seat</th>\n");
      out.write("            <th>Class</th>\n");
      out.write("            <th>Total Fare</th>\n");
      out.write("        </tr>\n");
      out.write("        ");

            while(rsPast.next()) {
        
      out.write("\n");
      out.write("        <tr>\n");
      out.write("            <td>");
      out.print( rsPast.getString("flightNum") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsPast.getString("airline") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsPast.getTime("departure") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsPast.getTime("arrival") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsPast.getDate("departureDate") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsPast.getString("seat") );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( rsPast.getString("class") );
      out.write("</td>\n");
      out.write("            <td>$");
      out.print( rsPast.getFloat("totalFare") );
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        ");

            }
        
      out.write("\n");
      out.write("    </table>\n");
      out.write("\n");
      out.write("    <p><a href=\"welcome.jsp\">Back to Home</a></p>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");

    } catch(Exception e) {
        out.println("<p>Error: " + e.getMessage() + "</p>");
        e.printStackTrace();
    } finally {
        if(rsUpcoming != null) try { rsUpcoming.close(); } catch(Exception e) {}
        if(rsPast != null) try { rsPast.close(); } catch(Exception e) {}
        if(pstmtUpcoming != null) try { pstmtUpcoming.close(); } catch(Exception e) {}
        if(pstmtPast != null) try { pstmtPast.close(); } catch(Exception e) {}
        if(conn != null) try { conn.close(); } catch(Exception e) {}
    }

      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
