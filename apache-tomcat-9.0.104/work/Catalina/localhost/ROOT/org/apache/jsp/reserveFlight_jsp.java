/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-04-28 20:52:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class reserveFlight_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

    String firstName = (String) session.getAttribute("firstName");
    if (firstName == null) {
        response.sendRedirect("index.jsp");
    }

    String flightID = request.getParameter("flightID");

    Connection conn = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;

    double flightPrice = 0.0;

    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/airlineproj", "root", "parshva123");

        // Get flight and base fare details
        String sql = "SELECT f.flightNum, f.departure, f.arrival, al.name AS airline, f.baseFare " +
                     "FROM Flight f JOIN Airline al ON f.airlineID = al.airlineID " +
                     "WHERE f.flightID = ? LIMIT 1";
        pstmt = conn.prepareStatement(sql);
        pstmt.setInt(1, Integer.parseInt(flightID));
        rs = pstmt.executeQuery();

        if (rs.next()) {
            flightPrice = rs.getDouble("baseFare");

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Reserve Flight</title>\n");
      out.write("    <script>\n");
      out.write("        function calculateFare() {\n");
      out.write("            var pricePerSeat = ");
      out.print( flightPrice );
      out.write(";\n");
      out.write("            var numSeats = document.getElementById(\"numSeats\").value;\n");
      out.write("            var totalFare = pricePerSeat * numSeats;\n");
      out.write("            document.getElementById(\"totalFare\").value = totalFare.toFixed(2);\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <h2>Hello, ");
      out.print( firstName );
      out.write("! Reserve Flight ");
      out.print( rs.getString("flightNum") );
      out.write("</h2>\n");
      out.write("    <p>Airline: ");
      out.print( rs.getString("airline") );
      out.write("</p>\n");
      out.write("    <p>Departure: ");
      out.print( rs.getTime("departure") );
      out.write("</p>\n");
      out.write("    <p>Arrival: ");
      out.print( rs.getTime("arrival") );
      out.write("</p>\n");
      out.write("    <p>Price Per Seat: $");
      out.print( String.format("%.2f", flightPrice) );
      out.write("</p>\n");
      out.write("\n");
      out.write("    <form action=\"processReservation.jsp\" method=\"post\">\n");
      out.write("        <input type=\"hidden\" name=\"accountID\" value=\"101\"> <!-- Hardcoded for demo -->\n");
      out.write("        <input type=\"hidden\" name=\"flightID\" value=\"");
      out.print( flightID );
      out.write("\">\n");
      out.write("        <input type=\"hidden\" name=\"pricePerSeat\" value=\"");
      out.print( flightPrice );
      out.write("\">\n");
      out.write("        Seat: <input type=\"text\" name=\"seat\" required><br>\n");
      out.write("        Class: \n");
      out.write("        <select name=\"class\">\n");
      out.write("            <option value=\"Economy\">Economy</option>\n");
      out.write("            <option value=\"Business\">Business</option>\n");
      out.write("            <option value=\"First\">First</option>\n");
      out.write("        </select><br>\n");
      out.write("        Passenger Name: <input type=\"text\" name=\"passengerName\" required><br>\n");
      out.write("        Number of Seats: <input type=\"number\" id=\"numSeats\" name=\"numSeats\" value=\"1\" min=\"1\" onchange=\"calculateFare()\" required><br>\n");
      out.write("        Total Fare: <input type=\"text\" id=\"totalFare\" name=\"totalFare\" readonly><br>\n");
      out.write("        <input type=\"submit\" value=\"Confirm Reservation\">\n");
      out.write("    </form>\n");
      out.write("\n");
      out.write("    <script>calculateFare();</script>\n");
      out.write("\n");
      out.write("    <p><a href=\"welcome.jsp\">Back to Home</a></p>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");

        } else {
            out.println("Error: Flight not found.");
        }
    } catch(Exception e) {
        out.println("Error: " + e.getMessage());
        e.printStackTrace();
    } finally {
        if(rs != null) try { rs.close(); } catch(Exception e) {}
        if(pstmt != null) try { pstmt.close(); } catch(Exception e) {}
        if(conn != null) try { conn.close(); } catch(Exception e) {}
    }

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
